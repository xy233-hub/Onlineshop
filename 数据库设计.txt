1. 设计目标与原则
数据一致性：通过外键约束和触发器确保数据关联正确

性能优化：合理的索引设计提高查询效率

业务完整性：完整支持商品状态流转和交易流程

可扩展性：预留扩展字段，支持未来功能扩展

2. 表结构详细设计
2.1 卖家表 (seller)
核心功能：存储卖家账户信息和管理数据

seller_id：主键，唯一标识卖家

username：登录用户名，唯一约束

password：加密存储的密码

扩展字段：邮箱、电话、状态等支持账户管理

2.2 商品表 (products)
核心功能：管理商品信息和状态流转

product_id：主键，自动增长

seller_id：外键关联卖家，支持级联删除

product_status：三状态流转（online→frozen→sold）

业务字段：价格、库存、分类等

时间字段：自动记录创建和更新时间

2.3 购买意向表 (purchase_intents)
核心功能：记录交易流程和客户信息

purchase_id：主键，自动增长

product_id：外键关联商品

purchase_status：三状态管理交易进度

客户信息：姓名、电话、地址等

业务字段：意向价格、买卖双方备注

3. 状态流转设计
3.1 商品状态机
text
online（在线）
    ↓ 创建pending意向
frozen（冻结）
    ↓ 意向success
sold（售出）
    ↓ 意向failed  
online（恢复在线）
3.2 购买意向状态机
text
pending（待处理）
    ↓ 卖家确认
success（成功）
    ↓ 卖家拒绝/超时
failed（失败）
4. 索引策略
主键索引：所有表的主键字段

外键索引：所有关联字段建立索引

业务查询索引：状态、时间、分类等高频查询字段

唯一约束：卖家用户名唯一性

5. 数据完整性保障
外键约束：确保关联数据存在

触发器同步：自动维护商品状态与意向状态一致性

时间戳管理：自动记录操作时间

枚举约束：限制状态字段取值范围

6. 视图设计目的
简化复杂查询：封装多表关联逻辑

数据统计：提供销售数据分析

权限控制：通过视图控制数据访问范围

7. 存储过程价值
业务逻辑封装：复杂操作封装为单一调用

事务一致性：确保多个操作的原子性

性能优化：减少网络传输次数


8.主要设计表
卖家表 (seller)
存储唯一的卖家账号信息

字段说明：

seller_id：整数，主键

username：字符串，卖家登录用户名

password：字符串，加密存储的登录密码

create_time：时间戳，账号创建时间

商品表 (products)
存储商品信息

product_id：整数，主键，自动增长

product_name：字符串，商品名称

product_desc：文本，商品详细描述

image_url：字符串，商品图片的存储路径或链接

price：商品价格

product_status：枚举类型，表示商品状态：「

--online：在线可购买

--frozen：已冻结（有人意向购买）

--sold：已售出
」

created_at：时间戳，商品上架时间

updated_at：时间戳，最后更新时间

购买意向表 (purchase_intents)
记录顾客的购买意向信息


purchase_id：整数，主键，自动增长

product_id：整数，外键，关联到商品表的id

customer_name：字符串，顾客姓名

customer_phone：字符串，顾客联系电话

customer_address：字符串，收货地址

purchase_status：枚举类型，交易状态：「

--pending：待处理（商品已冻结）

--success：交易成功

--failed：交易失败
」

created_at：时间戳，购买意向提交时间

updated_at：时间戳，最后更新时间